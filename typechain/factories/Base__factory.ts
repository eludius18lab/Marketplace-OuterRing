/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Base, BaseInterface } from "../Base";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "a",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "b",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "c",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "d",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mul",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "resta",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "suma",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600061001d6001610081565b90508015610035576000805461ff0019166101001790555b801561007b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50610198565b60008054610100900460ff1615610113578160ff1660011480156100b557506100b33061018960201b6101a21760201c565b155b61010b5760405162461bcd60e51b815260206004820152602e602482015260008051602061057383398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b506000919050565b60005460ff80841691161061016f5760405162461bcd60e51b815260206004820152602e602482015260008051602061057383398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610102565b506000805460ff191660ff92909216919091179055600190565b6001600160a01b03163b151590565b6103cc806101a76000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80637e7d8ec61161005b5780637e7d8ec6146100c15780638129fc1c146100c95780638a054ac2146100d3578063c3da42b8146100dc57600080fd5b80630dbe671f1461008d5780633475a3ed146100a85780634df7e3d0146100b057806358931c46146100b9575b600080fd5b61009660035481565b60405190815260200160405180910390f35b6100966100e5565b61009660045481565b6100966100fc565b61009661010e565b6100d1610120565b005b61009660025481565b61009660015481565b60006003546004546100f79190610369565b905090565b60006003546004546100f7919061034a565b60006004546003546100f79190610332565b600061012c60016101b1565b90508015610144576000805461ff0019166101001790555b60016003908155600260045561015990610242565b801561019f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6001600160a01b03163b151590565b60008054610100900460ff1615610201578160ff1660011480156101d45750303b155b6101f95760405162461bcd60e51b81526004016101f090610299565b60405180910390fd5b506000919050565b60005460ff8084169116106102285760405162461bcd60e51b81526004016101f090610299565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff166102695760405162461bcd60e51b81526004016101f0906102e7565b61019f81600054610100900460ff166102945760405162461bcd60e51b81526004016101f0906102e7565b600155565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000821982111561034557610345610380565b500190565b600081600019048311821515161561036457610364610380565b500290565b60008282101561037b5761037b610380565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220a66a2eb3db8b4163dc6e8c4877c54d357eefc25e50c5688841c652a89c39398264736f6c63430008040033496e697469616c697a61626c653a20636f6e747261637420697320616c726561";

export class Base__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Base> {
    return super.deploy(overrides || {}) as Promise<Base>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Base {
    return super.attach(address) as Base;
  }
  connect(signer: Signer): Base__factory {
    return super.connect(signer) as Base__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseInterface {
    return new utils.Interface(_abi) as BaseInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Base {
    return new Contract(address, _abi, signerOrProvider) as Base;
  }
}
